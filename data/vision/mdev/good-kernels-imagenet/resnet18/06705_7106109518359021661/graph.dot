digraph kernel {
newrank = true;
op_0x5566a540e500 [label="Share"];
op_0x5566a540e5f0 [label="Share"];
op_0x5566a540e690 [label="Share"];
op_0x5566a540eab8 [label="Expand"];
op_0x5566a540f530 [label="Shift"];
op_0x5566a540f5c0 [label="Shift"];
op_0x5566a54114c0 [label="Merge"];
op_0x5566a5413c00 [label="Split"];
op_0x5566a548dfc0 [label="Split"];
op_0x5566a54cb1f0 [label="Share"];
op_0x5566a7544580 [label="Unfold"];
op_0x5566a75446c0 [label="Unfold"];
reduce_0x7f23c0002ce8 [label="Sum", shape=box];
reduce_0x7f23c0001a98 [label="Sum", shape=box];
reduce_0x7f23c0001ab0 [label="Sum", shape=box];
reduce_0x7f23c0005640 [label="Sum", shape=box];
subgraph cluster_out {
label = "Output";
out_0 [label="N(0)", shape=none];
out_1 [label="C_out(1)", shape=none];
out_2 [label="H(2)", shape=none];
out_3 [label="H(3)", shape=none];
}
{ rank = same;
reduce_0x7f23c0002ce8;
reduce_0x7f23c0001a98;
reduce_0x7f23c0001ab0;
reduce_0x7f23c0005640;
out_0;
out_1;
out_2;
out_3;
}
subgraph cluster_in_0 {
label = "Input 0";
in_0_0 [label="N(0)", shape=none];
in_0_1 [label="C_in(1)", shape=none];
in_0_2 [label="H(2)", shape=none];
in_0_3 [label="H(3)", shape=none];
}
subgraph cluster_in_1 {
label = "Input 1";
in_1_0 [label="s^-1*C_in(0)", shape=none];
in_1_1 [label="k_1(1)", shape=none];
in_1_2 [label="k_1(2)", shape=none];
in_1_3 [label="C_out(3)", shape=none];
}
{ rank = same;
in_0_0;
in_0_1;
in_0_2;
in_0_3;
in_1_0;
in_1_1;
in_1_2;
in_1_3;
}
in_0_0 -> out_0 [label="N"];
in_0_1 -> op_0x5566a548dfc0 [label="C_in"];
in_0_2 -> op_0x5566a7544580 [label="H"];
in_0_3 -> op_0x5566a540f5c0 [label="H"];
in_1_0 -> op_0x5566a54cb1f0 [label="s^-1*C_in (->R)"];
in_1_1 -> op_0x5566a540e5f0 [label="k_1 (->R)"];
in_1_2 -> op_0x5566a540e690 [label="k_1 (->R)"];
in_1_3 -> op_0x5566a540e500 [label="C_out (->R)"];
op_0x5566a540eab8 -> op_0x5566a540e500 [label="C_out (->L)"];
op_0x5566a7544580 -> op_0x5566a540e5f0 [label="k_1 (R->L)"];
op_0x5566a75446c0 -> op_0x5566a540e690 [label="k_1 (R->L)"];
op_0x5566a54114c0 -> op_0x5566a540f530 [label="s*H"];
op_0x5566a75446c0 -> op_0x5566a54114c0 [label="H (L->L)"];
op_0x5566a548dfc0 -> op_0x5566a54114c0 [label="s (L->R)"];
op_0x5566a540f530 -> op_0x5566a5413c00 [label="s*H"];
op_0x5566a540e500 -> out_1 [label="C_out"];
op_0x5566a7544580 -> out_2 [label="H (L->)"];
op_0x5566a5413c00 -> out_3 [label="H (L->)"];
op_0x5566a548dfc0 -> op_0x5566a54cb1f0 [label="s^-1*C_in (R->L)"];
op_0x5566a540f5c0 -> op_0x5566a75446c0 [label="H"];
op_0x5566a540e5f0 -> reduce_0x7f23c0001a98 [label="k_1"];
op_0x5566a540e690 -> reduce_0x7f23c0001ab0 [label="k_1"];
op_0x5566a5413c00 -> reduce_0x7f23c0002ce8 [label="s (R->)"];
op_0x5566a54cb1f0 -> reduce_0x7f23c0005640 [label="s^-1*C_in"];
}
