digraph kernel_generated {
newrank = true;
op_0x55b7501b61d0 [label="Share"];
op_0x55b7501b6270 [label="Share"];
op_0x55b7501b62c0 [label="Share"];
op_0x55b7501b6310 [label="Share"];
op_0x55b7501b64f0 [label="Share"];
op_0x55b7501b6540 [label="Share"];
op_0x55b7501b6590 [label="Share"];
op_0x55b7501b6678 [label="Expand"];
op_0x55b7501b66d8 [label="Expand"];
op_0x55b7501bae40 [label="Merge"];
op_0x55b7501d4640 [label="Unfold"];
op_0x55b7501d46c0 [label="Unfold"];
op_0x55b7501f3da0 [label="Split"];
reduce_0x7f6f60003a98 [label="Sum", shape=box];
reduce_0x7f6f60003ab0 [label="Sum", shape=box];
reduce_0x7f6f60004f10 [label="Sum", shape=box];
reduce_0x7f6f60007720 [label="Sum", shape=box];
subgraph cluster_out {
label = "Output";
out_0 [label="N(0)", shape=none];
out_1 [label="C_out(1)", shape=none];
out_2 [label="H(2)", shape=none];
out_3 [label="H(3)", shape=none];
}
{ rank = same;
reduce_0x7f6f60003a98;
reduce_0x7f6f60003ab0;
reduce_0x7f6f60004f10;
reduce_0x7f6f60007720;
out_0;
out_1;
out_2;
out_3;
}
subgraph cluster_in_0 {
label = "Input 0";
in_0_0 [label="N(0)", shape=none];
in_0_1 [label="C_in(1)", shape=none];
in_0_2 [label="H(2)", shape=none];
in_0_3 [label="H(3)", shape=none];
}
subgraph cluster_in_1 {
label = "Input 1";
in_1_0 [label="g(0)", shape=none];
in_1_1 [label="g^-1*s^-1*C_in(1)", shape=none];
in_1_2 [label="k_1(2)", shape=none];
in_1_3 [label="k_1(3)", shape=none];
}
subgraph cluster_in_2 {
label = "Input 2";
in_2_0 [label="g^-1*C_out(0)", shape=none];
in_2_1 [label="g*s(1)", shape=none];
in_2_2 [label="k_1(2)", shape=none];
}
{ rank = same;
in_0_0;
in_0_1;
in_0_2;
in_0_3;
in_1_0;
in_1_1;
in_1_2;
in_1_3;
in_2_0;
in_2_1;
in_2_2;
}
in_0_0 -> out_0 [label="N"];
in_0_1 -> op_0x55b7501f3da0 [label="C_in"];
in_0_2 -> op_0x55b7501d4640 [label="H"];
in_0_3 -> op_0x55b7501d46c0 [label="H"];
in_1_0 -> op_0x55b7501b6310 [label="g (->R)"];
in_1_1 -> op_0x55b7501b61d0 [label="g^-1*s^-1*C_in (->R)"];
in_1_2 -> op_0x55b7501b6270 [label="k_1 (->R)"];
in_1_3 -> op_0x55b7501b62c0 [label="k_1 (->R)"];
in_2_0 -> op_0x55b7501b6540 [label="g^-1*C_out (->R)"];
in_2_1 -> op_0x55b7501b6590 [label="g*s (->R)"];
in_2_2 -> op_0x55b7501b64f0 [label="k_1 (->R)"];
op_0x55b7501bae40 -> out_1 [label="C_out"];
op_0x55b7501d4640 -> out_2 [label="H (L->)"];
op_0x55b7501d46c0 -> out_3 [label="H (L->)"];
op_0x55b7501f3da0 -> op_0x55b7501b61d0 [label="g^-1*s^-1*C_in (R->L)"];
op_0x55b7501d4640 -> op_0x55b7501b6270 [label="k_1 (R->L)"];
op_0x55b7501b64f0 -> op_0x55b7501b62c0 [label="k_1 (->L)"];
op_0x55b7501b6678 -> op_0x55b7501b6310 [label="g (->L)"];
op_0x55b7501d46c0 -> op_0x55b7501b64f0 [label="k_1 (R->L)"];
op_0x55b7501b66d8 -> op_0x55b7501b6540 [label="g^-1*C_out (->L)"];
op_0x55b7501f3da0 -> op_0x55b7501b6590 [label="g*s (L->L)"];
op_0x55b7501b6310 -> op_0x55b7501bae40 [label="g (->L)"];
op_0x55b7501b6540 -> op_0x55b7501bae40 [label="g^-1*C_out (->R)"];
op_0x55b7501b6270 -> reduce_0x7f6f60003a98 [label="k_1"];
op_0x55b7501b62c0 -> reduce_0x7f6f60003ab0 [label="k_1"];
op_0x55b7501b6590 -> reduce_0x7f6f60004f10 [label="g*s"];
op_0x55b7501b61d0 -> reduce_0x7f6f60007720 [label="g^-1*s^-1*C_in"];
}
